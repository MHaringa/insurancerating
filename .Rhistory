library(ggiraph)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(crosstalk)
library(reactable)
library(tibble)
#&nbsp;
?girafe
ggplot(data = Titanic) +
geom_col(mapping = aes(x = Class, y = Freq))
Titanic <- as.data.frame(Titanic)
ggplot(data = Titanic) +
geom_col(mapping = aes(x = Class, y = Freq))
ggplot(data = Titanic) +
geom_col(mapping = aes(x = Class, y = Freq)) +
scale_y_continuous(name = "Jaarpremie")
ggplot(data = Titanic) +
geom_col(mapping = aes(x = Class, y = Freq)) +
scale_y_continuous(name = "Jaarpremie", labels = scales::comma())
ggplot(data = Titanic) +
geom_col(mapping = aes(x = Class, y = Freq)) +
scale_y_continuous(name = "Jaarpremie", labels = scales::comma)
ggplot(data = Titanic) +
geom_col(mapping = aes(x = Class, y = Freq)) +
scale_y_continuous(name = "Jaarpremie", labels = scales::percent)
ggplot(data = Titanic) +
geom_col(mapping = aes(x = Class, y = Freq)) +
scale_y_continuous(name = "Jaarpremie", labels = scales::comma)
ggplot(data = Titanic) +
geom_col(mapping = aes(x = Class, y = Freq)) +
scale_y_continuous(name = "Jaarpremie", labels = scales::percent())
ggplot(data = Titanic) +
geom_col(mapping = aes(x = Class, y = Freq)) +
scale_y_continuous(name = "Jaarpremie", labels = scales::percent)
ggplot(data = Titanic) +
geom_col(mapping = aes(x = Class, y = Freq)) +
scale_y_continuous(name = "Jaarpremie", labels = scales::percent) +
labs(y = "Jaarpremie", x = "x as")
ggplot(data = Titanic) +
geom_col(mapping = aes(x = Class, y = Freq)) +
scale_y_continuous(labels = scales::percent) +
labs(y = "Jaarpremie", x = "x as", title = "naam figuur")
ggplot(data = Titanic) +
geom_col(mapping = aes(x = Class, y = Freq)) +
scale_y_continuous(labels = scales::percent) +
labs(y = "Jaarpremie", x = "x as", title = "naam figuur", subtitle = "subnaam figuur")
ggplot(data = Titanic) +
geom_col(mapping = aes(x = Class, y = Freq)) +
scale_y_continuous(labels = scales::percent) +
labs(y = "Jaarpremie", x = "x as", title = "naam figuur", subtitle = "subnaam figuur", source = "SDF")
ggplot(data = Titanic) +
geom_col(mapping = aes(x = Class, y = Freq)) +
scale_y_continuous(labels = scales::percent) +
labs(y = "Jaarpremie", x = "x as", title = "naam figuur", subtitle = "subnaam figuur", tag = "SDF")
ggplot(data = Titanic) +
geom_col(mapping = aes(x = Class, y = Freq)) +
scale_y_continuous(labels = scales::percent) +
labs(y = "Jaarpremie", x = "x as", title = "naam figuur", subtitle = "subnaam figuur", caption = "SDF")
ggplot(data = Titanic) +
geom_col(mapping = aes(x = Class, y = Freq)) +
scale_y_continuous(labels = scales::percent) +
labs(y = "Jaarpremie", x = "x as", title = "naam figuur", subtitle = "subnaam figuur", caption = "Bron: SDF")
ggplot(data = Titanic) +
geom_col(mapping = aes(x = Class, y = Freq)) +
scale_y_continuous(labels = scales::percent) +
labs(y = "Jaarpremie",
x = "x as",
title = "naam figuur",
subtitle = "subnaam figuur",
caption = "Bron: SDF")
devtools::document()
devtools::document()
devtools::document()
library(openxlsx)
install.packages("openxlsx")
library(openxlsx)
library(writexl)
writexl::write_xlsx(list(iris = iris, mtcars = mtcars), "example_modify_exceltab.xlsx")
wb <- loadWorkbook("example_modify_exceltab.xlsx")
addWorksheet(wb, sheetName = "USArrests")
writeData(wb, sheet = "USArrests", USArrests, colNames = TRUE)
saveWorkbook(wb, "example_modify_exceltab1.xlsx", overwrite = TRUE)
getwd()
install.packages("Rcpp", type = "source")
library(Rcpp)
library(spatialrisk)
library(dplyr)
library(spatialrisk)
devtools::document()
pkgdown::build_site()
devtools::document()
devtools::release()
library(geosphere)
Groningen
library(spatialrisk)
Groningen
p1 <- c(6.57, 53.2)
destPoint(p1, 90, 200)
p1 <- c(6.57, 53.2)
oosten <- destPoint(p1, 90, 200)
haversine(53.2, 6.57, 53.2, 6.572993)
haversine(53.2, 6.57, 53.2, 6.572994)
haversine(53.2, 6.57, 53.2, 6.572999)
haversine(53.2, 6.57, 53.2, 6.573)
haversine(53.2, 6.57, 53.2, 6.5729999)
haversine(53.2, 6.57, 53.2, 6.57299)
haversine(53.2, 6.57, 53.2, 6.572999)
haversine(53.2, 6.57, 53.2, 6.5729993)
haversine(53.2, 6.57, 53.2, 6.5729991)
haversine(53.2, 6.57, 53.2, 6.5729992)
haversine(53.2, 6.57, 53.2, 6.57299925)
haversine(53.2, 6.57, 53.2, 6.572999252)
haversine(53.2, 6.57, 53.2, 6.572999254)
haversine(53.2, 6.57, 53.2, 6.572999258)
haversine(53.2, 6.57, 53.2, 6.57299926)
haversine(53.2, 6.57, 53.2, 6.57299927)
haversine(53.2, 6.57, 53.2, 6.572999265)
groningen_200m <- haversine(53.2, 6.57, 53.2, 6.572999265)
groningen_200m_oostwest <- haversine(53.2, 6.57, 53.2, 6.572999265)
insurance
insurance %>%
filter(stringr::str_sub(postcode, 1,4) == "6211")
insurance %>%
filter(stringr::str_sub(postcode, 1, 4) == "6211")
library(stringr)
insurance %>%
filter(stringr::str_sub(postcode, 1, 4) == "6211")
library(dplyr)
insurance %>%
filter(stringr::str_sub(postcode, 1, 4) == "6211")
p1 <- c(5.68, 50.8)
oosten <- destPoint(p1, 90, 200)
oosten
maastricht_200m_oostwest <- haversine(50.8, 5.68, 50.8, 5.682837)
maastricht_200m_oostwest
maastricht_200m_oostwest <- haversine(50.8, 5.68, 50.8, 5.6828374)
maastricht_200m_oostwest
maastricht_200m_oostwest <- haversine(50.8, 5.68, 50.8, 5.6828379)
maastricht_200m_oostwest
maastricht_200m_oostwest <- haversine(50.8, 5.68, 50.8, 5.6828380)
maastricht_200m_oostwest
maastricht_200m_oostwest <- haversine(50.8, 5.68, 50.8, 5.6828385)
maastricht_200m_oostwest
maastricht_200m_oostwest <- haversine(50.8, 5.68, 50.8, 5.682839)
maastricht_200m_oostwest
maastricht_200m_oostwest <- haversine(50.8, 5.68, 50.8, 5.68284)
maastricht_200m_oostwest
maastricht_200m_oostwest <- haversine(50.8, 5.68, 50.8, 5.68285)
maastricht_200m_oostwest
maastricht_200m_oostwest <- haversine(50.8, 5.68, 50.8, 5.682845)
maastricht_200m_oostwest
maastricht_200m_oostwest <- haversine(50.8, 5.68, 50.8, 5.682841)
maastricht_200m_oostwest
maastricht_200m_oostwest <- haversine(50.8, 5.68, 50.8, 5.682842)
maastricht_200m_oostwest
maastricht_200m_oostwest <- haversine(50.8, 5.68, 50.8, 5.682843)
maastricht_200m_oostwest
maastricht_200m_oostwest <- haversine(50.8, 5.68, 50.8, 5.6828425)
maastricht_200m_oostwest
maastricht_200m_oostwest <- haversine(50.8, 5.68, 50.8, 5.6828429)
maastricht_200m_oostwest
maastricht_200m_oostwest <- haversine(50.8, 5.68, 50.8, 5.6828427)
maastricht_200m_oostwest
maastricht_200m_oostwest <- haversine(50.8, 5.68, 50.8, 5.6828426)
maastricht_200m_oostwest
maastricht_200m_oostwest <- haversine(50.8, 5.68, 50.8, 5.68284265)
maastricht_200m_oostwest
maastricht_200m_oostwest <- haversine(50.8, 5.68, 50.8, 5.68284261)
maastricht_200m_oostwest
maastricht_200m_oostwest <- haversine(50.8, 5.68, 50.8, 5.68284262)
maastricht_200m_oostwest
maastricht_200m_oostwest <- haversine(50.8, 5.68, 50.8, 5.68284263)
maastricht_200m_oostwest
maastricht_200m_oostwest <- haversine(50.8, 5.68, 50.8, 5.68284264)
maastricht_200m_oostwest
maastricht_200m_oostwest <- haversine(50.8, 5.68, 50.8, 5.682842635)
maastricht_200m_oostwest
maastricht_200m_oostwest <- haversine(50.8, 5.68, 50.8, 5.682842637)
maastricht_200m_oostwest
maastricht_200m_oostwest <- haversine(50.8, 5.68, 50.8, 5.682842638)
maastricht_200m_oostwest
groningen_200m_oostwest <- haversine(53.2, 6.57, 53.2, 6.572999265)
maastricht_200m_oostwest <- haversine(50.8, 5.68, 50.8, 5.682842638)
data.frame(p = c("Groningen_p1", "Groningen_p2", "Maastricht_p1", "Maastricht_p2"),
lon = c(6.57, 6.572999265, 5.68, 5.682842638),
lat = c(53.2, 53.2, 50.8, 50.8))
df <- data.frame(p = c("Groningen_p1", "Groningen_p2", "Maastricht_p1", "Maastricht_p2"),
lon = c(6.57, 6.572999265, 5.68, 5.682842638),
lat = c(53.2, 53.2, 50.8, 50.8))
df_sf <- df %>%
sf::st_as_sf(p, c("lon", "lat"), crs = 4326)
df_sf <- df %>%
sf::st_as_sf(., c("lon", "lat"), crs = 4326)
?st_as_sf
df_sf <- df %>%
sf::st_as_sf(crs = 4326)
df_sf <- df %>% sf::st_as_sf(coords = c("lon", "lat"), crs = 4326)
df_sf <- df %>%
sf::st_as_sf(coords = c("lon", "lat"), crs = 4326)
df_sf
df_sf <- df %>%
sf::st_as_sf(coords = c("lon", "lat"), crs = 4326) %>%
sf::st_transform(crs = 28992)
df_sf
df_sf <- df %>%
sf::st_as_sf(coords = c("lon", "lat"), crs = 4326) %>%
sf::st_transform(crs = 28992) %>%
dplyr::mutate(lat = sf::st_coordinates(.)[,1],
lon = sf::st_coordinates(.)[,2])
df_sf
df_sf <- df %>%
sf::st_as_sf(coords = c("lon", "lat"), crs = 4326) %>%
sf::st_transform(crs = 28992) %>%
dplyr::mutate(rd_lat = sf::st_coordinates(.)[,1],
rd_lon = sf::st_coordinates(.)[,2])
df_sf
df_sf <- df %>%
sf::st_as_sf(coords = c("lon", "lat"), crs = 4326) %>%
dplyr::mutate(rd_lat = sf::st_coordinates(.)[,1],
rd_lon = sf::st_coordinates(.)[,2]) %>%
sf::st_transform(crs = 28992) %>%
dplyr::mutate(rd_lat = sf::st_coordinates(.)[,1],
rd_lon = sf::st_coordinates(.)[,2])
df_sf
df_sf <- df %>%
sf::st_as_sf(coords = c("lon", "lat"), crs = 4326) %>%
dplyr::mutate(lat = sf::st_coordinates(.)[,1],
lon = sf::st_coordinates(.)[,2]) %>%
sf::st_transform(crs = 28992) %>%
dplyr::mutate(rd_lat = sf::st_coordinates(.)[,1],
rd_lon = sf::st_coordinates(.)[,2])
df_sf
df_sf <- df %>%
sf::st_as_sf(coords = c("lon", "lat"), crs = 4326) %>%
dplyr::mutate(lat = sf::st_coordinates(.)[,1],
lon = sf::st_coordinates(.)[,2]) %>%
sf::st_transform(crs = 28992) %>%
dplyr::mutate(rd_x = sf::st_coordinates(.)[,1],
rd_y = sf::st_coordinates(.)[,2])
dist_rd <- function(xbegin, xend, ybegin, yend){
sqrt((xbegin - xend)^2 + (ybegin - yend) ^ 2)
}
groningen_200m_oostwest_rd <- dist_rd(234038.9, 234239.3, 579910.4, 579913.7)
groningen_200m_oostwest_rd
maastricht_200m_oostwest_rd <- dist_rd(175643.2, 175843.6, 312274.8, 312275.6)
maastricht_200m_oostwest_rd
library(spatialrisk)
# Bepaal grootste concentratie
hconc <- highest_concentration(Groningen, amount, display_progress = FALSE)
plot(hconc)
install.packages("spatialrisk")
install.packages("spatialrisk")
library(spatialrisk)
# Bepaal grootste concentratie
hconc <- highest_concentration(Groningen, amount, display_progress = FALSE)
plot(hconc)
# Zoek in buurt
hconc_ngh <- neighborhood_gh_search(hconc)
plot(hconc_ngh)
library(tidyverse)
install.packages("tidyverse")
library(data.table)
install.packages("insurancerating")
library(insurancerating)
library(spatialrisk)
library(sf)
install.packages("sf")
library(sf)
library(spatialrisk)
install.packages("stars")
library(spatialrisk)
library(spatialrisk)
plot_points(Groningen, value = amount)
hconc <- highest_concentration(Groningen, amount, radius = 200, grid_distance = 50)
hconc
plot(hconc)
hconc
install.packages("leaderCluster")
library(leaderCluster)
delclustout <- leaderCluster(deliveredloc, radius = .2, distance = "haversine", max_iter=1L)
delclustout <- leaderCluster(hconc, radius = .2, distance = "haversine", max_iter=1L)
delclustout <- leaderCluster(hconc[, c("lon", "lat")], radius = .2, distance = "haversine", max_iter=1L)
delclustout
hconc1 <- hconc %>%
mutate(cluster_id = delclustout$cluster_id)
library(dplyr)
hconc1 <- hconc %>%
mutate(cluster_id = delclustout$cluster_id)
hconc1
hconc1 <- hconc %>%
mutate(cluster_id = delclustout$cluster_id) %>%
slice(1:100)
hconc1
plot_points(hconc1, value = cluster_id)
hconc1 <- hconc %>%
mutate(cluster_id = delclustout$cluster_id) %>%
slice(1:20)
hconc1
plot_points(hconc1, value = cluster_id)
delclustout <- leaderCluster(hconc[, c("lon", "lat")], radius = .2, distance = "haversine", max_iter=10L)
hconc1 <- hconc %>%
mutate(cluster_id = delclustout$cluster_id) %>%
slice(1:20)
hconc1
plot_points(hconc1, value = cluster_id)
hconc1 <- hconc %>%
mutate(cluster_id = delclustout$cluster_id) %>%
slice(1:100)
hconc1
delclustout <- leaderCluster(hconc[, c("lon", "lat")], radius = .2, distance = "haversine", max_iter=10L)
hconc1 <- hconc %>%
mutate(cluster_id = delclustout$cluster_id) %>%
slice(1:100)
hconc1
plot_points(hconc1, value = cluster_id)
delclustout <- leaderCluster(hconc[, c("lon", "lat")], radius = .2, distance = "haversine", max_iter=10L)
hconc1 <- hconc %>%
mutate(cluster_id = delclustout$cluster_id) %>%
slice(1:100)
hconc1
plot_points(hconc1, value = cluster_id)
delclustout <- leaderCluster(hconc[, c("lon", "lat")], radius = .2, distance = "haversine", max_iter=100L)
hconc1 <- hconc %>%
mutate(cluster_id = delclustout$cluster_id) %>%
slice(1:100)
hconc1
plot_points(hconc1, value = cluster_id)
delclustout <- leaderCluster(hconc[, c("lon", "lat")], radius = .25, distance = "haversine", max_iter=100L)
hconc1 <- hconc %>%
mutate(cluster_id = delclustout$cluster_id) %>%
slice(1:100)
hconc1
plot_points(hconc1, value = cluster_id)
delclustout <- leaderCluster(hconc[, c("lon", "lat")], radius = .30, distance = "haversine", max_iter=100L)
hconc1 <- hconc %>%
mutate(cluster_id = delclustout$cluster_id) %>%
slice(1:100)
hconc1
plot_points(hconc1, value = cluster_id)
delclustout <- leaderCluster(hconc[, c("lon", "lat")], radius = .30, distance = "haversine", max_iter=10L)
hconc1 <- hconc %>%
mutate(cluster_id = delclustout$cluster_id) %>%
slice(1:100)
hconc1
plot_points(hconc1, value = cluster_id)
plot_points(hconc1, value = cluster_id)
install.packages("fpc")
plot_points(Groningen, value = amount)
library(fpc)
DBSCAN <- dbscan(cbind(hconc1$lat, hconc1$lon), eps = 1.5, MinPts = 3)
DBSCAN
DBSCAN$cluster
install.packages("dbscan")
library(dbscan)
?dbscan::dbscan()
dbscan::dbscan(cbind(hconc1$lat, hconc1$lon), search = "dist")
dbscan::dbscan(cbind(hconc1$lat, hconc1$lon), eps = 1.5, search = "dist")
delclustout <- leaderCluster(hconc[, c("lon", "lat")], radius = .30, distance = "haversine", max_iter=10L)
hconc1 <- hconc %>%
mutate(cluster_id = delclustout$cluster_id) %>%
slice(1:100)
hconc1
plot_points(hconc1, value = cluster_id)
delclustout <- leaderCluster(hconc[, c("lon", "lat")], radius = .30, distance = "haversine", max_iter=10L)
hconc1 <- hconc %>%
mutate(cluster_id = delclustout$cluster_id) %>%
slice(1:100)
hconc1
plot_points(hconc1, value = cluster_id)
hconc <- highest_concentration(Groningen, amount, radius = 200, grid_distance = 50)
hconc
plot(hconc)
delclustout <- leaderCluster(hconc[, c("lon", "lat")], radius = .30, distance = "haversine", max_iter=10L)
hconc1 <- hconc %>%
mutate(cluster_id = delclustout$cluster_id) %>%
slice(1:100)
hconc1 <- hconc %>%
mutate(cluster_id = delclustout$cluster_id) %>%
slice(1:1000)
hconc1
plot_points(hconc1, value = cluster_id)
plot(hconc)
delclustout <- leaderCluster(hconc[, c("lon", "lat")], radius = .30, distance = "haversine", max_iter=10L)
hconc1 <- hconc %>%
mutate(cluster_id = delclustout$cluster_id) %>%
slice(1:100)
hconc1
plot_points(hconc1, value = cluster_id)
hconc1 <- hconc %>%
mutate(cluster_id = delclustout$cluster_id) %>%
slice(1:200)
hconc1
plot_points(hconc1, value = cluster_id)
plot(hconc)
delclustout <- leaderCluster(hconc[, c("lon", "lat")], radius = .20, distance = "haversine", max_iter=10L)
hconc1 <- hconc %>%
mutate(cluster_id = delclustout$cluster_id) %>%
slice(1:200)
hconc1
plot_points(hconc1, value = cluster_id)
delclustout <- leaderCluster(hconc[, c("lon", "lat")], radius = .30, distance = "haversine", max_iter=10L)
hconc1 <- hconc %>%
mutate(cluster_id = delclustout$cluster_id) %>%
slice(1:200)
hconc1
plot_points(hconc1, value = cluster_id)
#' En dan per cluster id de hoogste nemen dan concentratie bepalen en cirkel op kaart weergeven met alle objecten
hconc1 <- hconc %>%
mutate(cluster_id = delclustout$cluster_id) %>%
slice(1:250) %>%
select(-geohash)
hconc1
install.packages(c("bayesplot", "broom", "cli", "colorspace", "cpp11", "curl", "DHARMa", "dplyr", "gargle", "gert", "ggplot2", "googledrive", "insight", "lme4", "Matrix", "mgcv", "mime", "raster", "Rcpp", "rmarkdown", "s2", "sf", "testthat", "tmap", "units", "xfun"))
install.packages(c("blob", "cli", "credentials", "googlesheets4", "isoband", "jpeg", "Rcpp", "RcppArmadillo", "readr", "sf", "stringi", "tibble", "utf8", "wk"))
library(spatialrisk)
nl_gemeentes
nl_gemeente
insurance
points_to_polygon(nl_gemeente, insurance, sum(amount))
insurance_sf <- points_to_polygon(nl_gemeente, insurance, sum(amount))
spatialrisk::
spatialrisk::choropleth(insurance_sf, value = "output", id_name = "areaname")
# Interactief
spatialrisk::choropleth(insurance_sf, value = "output", id_name = "areaname", mode = "view")
# Zorg dat dataset een kolom heeft met lon en lat
# Koppel dan de punten aan de polygonen mbv points_to_polygon
# sum(amount) aggregeert de kolom amount per polygoon
insurance_sf <- points_to_polygon(sf_map = nl_gemeente, df = insurance, oper = sum(amount))
corop_sf <- points_to_polygon(sf_map = nl_corop,
df = insurance, oper = sum(amount))
# Statische kaart
spatialrisk::choropleth(corop_sf, value = "output", id_name = "areaname")
# Interactieve kaart
spatialrisk::choropleth(corop_sf, value = "output", id_name = "areaname", mode = "view")
install.packages("fakir")
france_sf <- readRDS("~/Downloads/gadm36_FRA_3_sf.rds")
france_sf
insurance
# Data set met franse data
insurance_fr <- data.frame(amount = c(10, 8, 20),
lon = c(5, 5, 5),
lat = c(46, 47, 48))
# Data set met franse data
insurance_fr <- data.frame(amount = c(10, 8, 20),
lon = c(5, 5, 5),
lat = c(46, 47, 48))
frankrijk_sf <- points_to_polygon(sf_map = france_sf, df = insurance_fr, oper = sum(amount))
frankrijk_sf
spatialrisk::choropleth(corop_sf, value = "output", id_name = "NAME_3")
spatialrisk::choropleth(frankrijk_sf, value = "output", id_name = "NAME_3")
# Maak kaart frankrijk
spatialrisk::choropleth(frankrijk_sf, value = "output", id_name = "NAME_3", mode = "view")
# Zorg dat dataset een kolom heeft met de namen lon en lat
# Koppel dan de punten aan de polygonen mbv points_to_polygon
# sum(amount) aggregeert de kolom amount per polygoon
# 33 lon/lat coordinaten in de dataset vallen niet in een van de gemeentes
gemeente_sf <- points_to_polygon(sf_map = nl_gemeente,
df = insurance, oper = sum(amount))
# Zorg dat dataset een kolom heeft met de namen lon en lat
# Koppel dan de punten aan de polygonen mbv points_to_polygon
# sum(amount) aggregeert de kolom amount per polygoon
# 33 lon/lat coordinaten in de dataset vallen niet in een van de gemeentes
gemeente_sf <- points_to_polygon(sf_map = nl_gemeente,
df = insurance, oper = sum(amount), outside_print = TRUE)
# Zie voor andere landen dan NL https://gadm.org/download_country_v3.html
# Kies niveau 4 of niveau 5 voor nog meer regionaal niveau
france_sf <- readRDS("~/Downloads/gadm36_FRA_3_sf.rds")
# Data set met franse data
insurance_fr <- data.frame(amount = c(10, 8, 20),
lon = c(5, 5, 5),
lat = c(46, 47, 48))
frankrijk_sf <- points_to_polygon(sf_map = france_sf, df = insurance_fr, oper = sum(amount))
# Maak kaart frankrijk
spatialrisk::choropleth(frankrijk_sf, value = "output", id_name = "NAME_3")
# Maak kaart frankrijk
spatialrisk::choropleth(frankrijk_sf, value = "output", id_name = "NAME_3", mode = "view")
# Maak kaart frankrijk
spatialrisk::choropleth(frankrijk_sf, value = "output", id_name = "NAME_3", n = 3)
# Maak kaart frankrijk
spatialrisk::choropleth(frankrijk_sf, value = "output", id_name = "NAME_3", legend_title = "Allard")
# Maak kaart frankrijk
spatialrisk::choropleth(frankrijk_sf, value = "output", id_name = "NAME_3", legend_title = "Allard", n = 5)
points_to_polygon
frankrijk_sf
bind_rows(frankrijk_sf, insurance_sf)
dplyr::bind_rows(frankrijk_sf, insurance_sf)
x <- dplyr::bind_rows(frankrijk_sf, insurance_sf)
library(ggplot2)
ggplot(x) + geom_sf()
x
gemeente_sf
frankrijk_sf
# Zorg dat kolom met namen in beide sf objecten zelfde naam heeft
library(dplyr)
frankrijk_sf2 <- frankrijk_sf %>% rename(areaname = NAME_3)
# Voeg fr en nl samen
bind_rows(insurance_sf, frankrijk_sf2)
# Voeg fr en nl samen
samen <- bind_rows(insurance_sf, frankrijk_sf2)
# Voeg fr en nl samen
samen_sf <- bind_rows(insurance_sf, frankrijk_sf2)
# Voeg fr en nl samen
samen_sf <- bind_rows(insurance_sf, frankrijk_sf2)
spatialrisk::choropleth(samen_sf, value = "output", id_name = "areaname", mode = "view")
spatialrisk::choropleth(samen_sf, value = "output", id_name = "areaname")
spatialrisk::choropleth(samen_sf, value = "output", id_name = "areaname", mode = "view")
spatialrisk::choropleth(samen_sf, value = "output", id_name = "areaname")
spatialrisk::choropleth(samen_sf, value = "output", id_name = "areaname", mode = "view")
# Maak plots
spatialrisk::choropleth(samen_sf, value = "output", id_name = "areaname", legend_title = "Limonade")
# Maak plots
spatialrisk::choropleth(samen_sf, value = "output", id_name = "areaname", legend_title = "Aantal")
